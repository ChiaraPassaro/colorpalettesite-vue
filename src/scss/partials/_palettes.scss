.main.main--palettes{
  height: 80%;
  justify-content: center;
  align-items: center;
}
.header.header--palettes{
  height: 10%;
  background: $debugColor;
  #page-palette-list &{
  top: 150vh;
  will-change: top;
  /* slitta in alto*/
    @include animationFromTo(fromTo#{u}, 150vh, 0);
    animation-delay: #{$animationDelayBase}s;
  }
  /*
  .arrow--header .arrow__inner:before,
  .arrow--header:after{
    background: $debugColor;
  }*/
  .arrow{
    display: none;
  }
  .header__title{
    width: 100%;
    font-size: 2em;
    &__title{
      float: left;
      display: block;
    }
    &__color,
    &__picker{
      float: right;
      display: block;
      a {
        color: #FFFFFF;
        &:hover,
        &:active,
        &:focus {
          color: #000;
        }
      }
    }
    &__picker {
      padding-left: 2%;
    }
  }
}
.footer--palettes{
  #page-palette-list & {
    top: 100vh;
    will-change: top;
    @include animationFromTo(fromToFooter, 150vh, 0);
  }
}

.palettes{
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 90%;
  height: 90%;
  margin:0 auto;

  .row{
    display: flex;
    justify-content: space-between;

    align-items: center;
    height: 50%;
    position: relative;
    width: 100%;

    @media (min-aspect-ratio: 16/9) {
      width: 100%;
      padding: 10% 0;
      min-width: auto;
    }

    @media (min-aspect-ratio: 21/9) {
      width: 70%;
      padding: 5% 0;
    }
    #page-palette-list & {
      top: 150vh;
      will-change: top;
    }
  }
  /*le row slittano in alto*/
  //sovrascrivo delay su animation fromTo
  #page-palette-list & {
    $in: (2 * $animationDelayBase);
    @for $u from 1 through 2 {
      .row[class*='row-#{$u}'] {
        @include animationFromTo(fromTo#{u}, 150vh, 0);
        animation-delay: #{$in}s;
      }
      /* row successive*/
      $in: ($in + $animationDelayBase);
    }
  }

  .palette{
    width: calc((100%/4) - #{$palettePaddingL}px);
    padding: #{$palettePadding}px;
    margin: 2% 3%;
    &--not-active:hover{
      cursor: pointer;
      transform: scale(1.1);
      transition: transform 0.5s;
      .palette__content{
        filter: drop-shadow(2px 6px 5px rgba(0,0,0,0.3));
        transition: 0.5s;
        &:before{
          content: '';
          display: block;
          /* 1:1 Aspect Ratio */
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          border-radius: 100%;
          background: rgba(255,255,255,0.3);
        }
      }
      h2{
        position: absolute;
        top: 50%;
        left: 50%;
        font-weight: 900;
        background: rgba(255, 255, 255, 0.9);
        transform: translate(-50%,-50%) scale(1.2);
        transition: 0.5s;
      }
    }
    &__content{
      /* 1:1 Aspect Ratio */
      position: relative;
      padding-top: 100%;
      /* / 1:1 Aspect Ratio */

      width: 100%;
      border-radius: 100%;
      filter: drop-shadow(1px 1px 2px  rgba(0,0,0,0.6));
      background: $debugColor; /*colore temporaneo*/
      /*cerchio interno*/
      &:after{
        content: '';
        position: absolute;
        width: 35%;
        height: 35%;
        top: 50%;
        left: 50%;
        transform: translate(-50%,-50%);
        border-radius: 50%;
        z-index: 1;
        background: white;
      }
    }
    h2 {
      display: flex;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      z-index: 2;
      min-width: 80%;
      min-height: 30%;
      padding: 10px;
      font-size: $paletteFontSize;

      @media screen and (max-width: $mediaL) {
          font-size: 80%;
      }


      font-weight: $paletteFontWeight;
      text-transform: uppercase;
      border-radius: 5px;
      background: rgba(255, 255, 255, 0.8);
      filter: drop-shadow(1px 1px 10px  rgba(0,0,0,0.6));
      span{
        margin: auto;
        text-decoration: none;
        color: $paletteFontColor;
      }
    }
    &__number-color{
      /* 1:1 Aspect Ratio */
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      width: 100%;
      height: 100%;
      /* / 1:1 Aspect Ratio */

      list-style-type: none;

      /*pallini*/
      .color{
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;

        span.circle{
          position: absolute;
          top: -15px;
          left: 50%;
          transform: translateX(-50%);
          will-change: transform;
          width: $colorWidth;
          height: $colorHeight;
          background: black;
          border-radius: 100%;

          @media screen and (min-width: $mediaM){
            top: ($colorWidth * 1.2) / -2;
            width: $colorWidth * 1.2;
            height: $colorHeight * 1.2;
          }
          @media screen and (min-width: $mediaL){
            width: $colorWidth * 1.3;
            height: $colorHeight * 1.3;
          }
          @media screen and (min-width: $mediaXL){
            width: $colorWidth * 2;
            height: $colorHeight * 2;
          }
        }

        #page-palette-list & {
          //creo classi per tutti i gradi negativi e positivi e avvio animation rotate
          @for $i from 1 through 180 {
            &.deg#{$i} {
              @include animationRotation(rotation#{$i}, 0deg, #{$i}deg);
            }
          }

          @for $i from 1 through 180 {
            &.deg#{$i}m {
              @include animationRotation(rotation#{$i}m, 0deg, -#{$i}deg);
            }
          }
        }
      }
    }
  }

  //sovrascrivo delay su animation rotate
  /*prima palette*/
  $in: $animationDelayBase * 4;
  @for $u from 1 through 10{
    .palette[class*='del-#{$u}']{
      li[class*='deg'] {
        animation-delay: #{$in}s;
      }
    }
   /* palette successive*/
    $in: ($in + 0.3);
  }

}


