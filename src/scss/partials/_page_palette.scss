#page-palette{
  main{
    flex-direction: row;
    position: relative;
    animation-name: changeAlignFlex;
    animation-delay: 1s;
    animation-duration: #{$animationDelayBase}s;
    animation-iteration-count: 1;
    animation-fill-mode: forwards;
  }
  .palette__description{
    //width: 0;
    overflow: hidden;
    width: 40%;
    margin-left: -40%;
    //margin-right: 40%;
    animation-name: descPalette;
    animation-delay: 1.8s;
    animation-duration: #{$animationDelayBase}s;
    animation-iteration-count: 1;
    animation-fill-mode: forwards;

    &__info{
      padding: 4%;
    }
    h2{
      margin-bottom: 10px;
    }
    p{
      margin-bottom: 10px;
    }
    .row{
      width: 80%;
      margin: 20px auto;
    }
    &__list-colors{
      display: flex;
      justify-content: flex-end;
      align-items: center;
      position: absolute;
      bottom: 10%;
      left: 0;
      z-index: 1;
      width: 40%;
      height: 110px;
      margin-left: calc(-40% - 75px);
      background: $mainColor;
      transition: all 1s;
      &--active {
        position: absolute;
        left: 0;
        z-index: 1;
        width: 40%;
        margin-left: 0;
        padding-left: 2%;
      }
      &__actions {
        opacity: 0;
        width: 30%;
        font-size: 0;
        transition: all 0.5s;
      }
      &--open {
        width: 90%;
        left: 10%;

        .palette__description__list-colors__actions {
          opacity: 1;
          display: flex;
          justify-content: center;
          align-items: center;
          height: 90px;
          margin: 5px 0;
          font-size: 100%;
        }
        .arrow--list-colors-left {
          animation-name: z-indexChange;
          animation-delay: 1s;
          animation-duration: #{$animationDelayBase}s;
          animation-iteration-count: 1;
          animation-fill-mode: forwards;
        }

      }
      &--close {
        margin-left: 0;
        animation-name: listColorsOpen;
        animation-delay: 1s;
        animation-duration: #{$animationDelayBase}s;
        animation-iteration-count: 1;
        animation-fill-mode: backwards;
        animation-direction: reverse;
      }
    }
    .colors-square{
      overflow: hidden;
      display: flex;
      justify-content: flex-start;
      flex-direction: row-reverse;
      align-items: center;
      width: 70%;
      height: 100px;
      padding: 10px;
      list-style-type: none;
      &__item{
        flex-shrink: 0;
        width: 60px;
        height: 60px;
        margin-right: 5px;
        border: 1px solid white;
        span {
          display: block;
          width: 100%;
          height: 100%;
          visibility: hidden;
          font-size: 1px;
        }
      }
    }
  }
  .palette__detail{
    position: absolute;
    opacity: 0;
    left: 40%;
    width: 30%;
    animation-name: popDoughnut;
    animation-delay: 2.8s;
    animation-duration: #{$animationDelayBase}s;
    animation-iteration-count: 1;
    animation-fill-mode: forwards;

  }
  .palettes {
    animation-name: moveRight;
    animation-delay: 1s;
    animation-duration: #{$animationDelayBase}s;
    animation-iteration-count: 1;
    animation-fill-mode: forwards;
  }
  .palettes{
    //width: 100%;
    .palette{
      animation-name: changeWidth;
      animation-delay: 0.8s;
      animation-duration: #{$animationDelayBase}s;
      animation-iteration-count: 1;
      animation-fill-mode: forwards;
      &__content{
        background: $bodyColor;
        h2{
          opacity: 1;
          animation-name: changeOpacity;
          animation-delay: 0.8s;
          animation-duration: #{$animationDelayBase}s;
          animation-iteration-count: 1;
          animation-fill-mode: forwards;
        }
        /* .color */
        .palette__number-color .color{
          @for $i from 1 through 180 {
            &.deg#{$i} {
              transform: rotate(#{$i}deg);
            }
          }

          @for $i from 1 through 180 {
            &.deg#{$i}m {
              transform: rotate(-#{$i}deg);
            }
          }
          .circle {
            animation-name: circleSize;
            animation-delay: 1s;
            animation-duration: #{$animationDelayBase}s;
            animation-iteration-count: 1;
            animation-fill-mode: forwards;
          }
        }
      }
      &.active {
        .palette__content {
          background: $debugColor;
        }
      }
    }
    .row{
      animation-name: changeWrap;
      animation-delay: 1s;
      animation-duration: #{$animationDelayBase}s;
      animation-iteration-count: 1;
      animation-fill-mode: forwards;
    }
  }
  header{
    .arrow,
    .arrow:after{
      display: none;
    }
  }
}

@keyframes moveRight {
  to {
    margin-right: 0;
    width: 20%;
  }
}

@keyframes changeWidth {
  to {
    width: calc((100%/2) - #{$palettePaddingM}px);
    padding: #{$palettePadding}px;
    margin: 2% 3%;
  }
}

@media screen and (max-width: 1090px){
  @keyframes changeWidth {
    to {
      width: calc((100%/2) - #{$palettePadding}px);
      padding: #{$palettePadding}px;
      margin: 2% 3%;
    }
  }
}

@media screen and (min-width: 1091px){
  @keyframes changeWidth {
    to {
      width: calc((100%/2) - #{$palettePaddingL}px);
      padding: #{$palettePadding}px;
      margin: 2% 3%;
    }
  }
}
@media screen and (min-width: 1500px) and (max-width: 2300px){
  @keyframes changeWidth {
    to {
      width: calc((100%/2) - #{$palettePaddingXL}px);
      padding: #{$palettePadding}px;
      margin: 2% 3%;
    }
  }
}

@keyframes changeWrap {
  to {
    flex-wrap: wrap;
    padding: 0;
  }
}

@keyframes circleSize {
  to {
    top: ($colorWidth * 0.55) / - 2;
    width: $colorWidth * 0.55;
    height: $colorHeight * 0.55;
  }
}

@media screen and (max-width: $mediaM) {
  @keyframes circleSize {
    to {
      top: ($colorWidth * 0.30) / - 2;
      width: $colorWidth * 0.30;
      height: $colorHeight * 0.30;
    }
  }
}

@media screen and (min-width: $mediaXL) {
  @keyframes circleSize {
    to {
      top: ($colorWidth * 0.8) / - 2;
      width: $colorWidth * 0.8;
      height: $colorHeight * 0.8;
    }
  }
}

@keyframes popDoughnut {
  to {
    position: static;
    opacity: 100%;
  }
}

@keyframes descPalette {
  to {
    margin-left: 0;
  }
}

@keyframes listColorsActive {
  to {
    position: absolute;
    left: 0;
    z-index: 1;
    width: 40%;
    margin-left: 0;
    padding-left: 2%;
  }
}

@keyframes listColorsOpen {
  from {
    width: 40%;
    margin-left: 0;
  }
  to {
    width: 90%;
    left: 10%;
  }
}

@keyframes changeOpacity {
  to {
    opacity: 0;
  }
}

@keyframes z-indexChange {
  to {
    z-index: 0;
  }
}

@keyframes openColors {
  to {
    opacity: 1;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 90px;
    margin: 5px 0;
  }
}

@keyframes changeAlignFlex {
  to {
    align-items: flex-start;
  }
}

