/*common*/
*{
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body{
  font-family: 'Comfortaa', cursive;
  background: $bodyColor;
  font-size: $baseFont;
  line-height: $baseLineHeight;
}

.btn {
  display: inline-block;
  padding: 0.5em;
  border-radius: $btnBorderRadius;
  border: 2px solid;
  background-color: white;
  font-size: 100%;
  font-weight: bold;
  cursor: pointer;
    &:hover,
    &:active,
    &:focus {
      filter: brightness(85%);
      outline: none;
    }
}

.input-group{
  border: $inputBgSize solid $inputBorderColor;
  background: $inputBg;
  position: relative;
  padding: 5px;
  text-align: left;

  &:after{
    content: '';
    display: table;
    clear: both;
  }
  label{
    width: 70%;
    margin-left: 3%;
    text-align: left;
    font-size: $inputFontSize;
    line-height: $inputLH;
    color: $inputColorLabel;
    @media screen and (max-width: 1090px) {
      order: 1;
    }
  }
  input{
    position: absolute;
    top: 0;
    left: 0;
    @media screen and (max-width: 1091px) {
      position: static;
      order: 2;
      text-align: left;
      padding-left: 3%;
      width: 100%;
    }
    display: block;
    width: 100%;
    height: 100%;
    background: none;
    border: 2px solid transparent;
    text-align: right;
    font-size: $inputFontSize;
    line-height: $inputLH;
    color: $inputColorInput;
    &:focus{
      border: 0;
      outline: 0;
      border: 2px solid $inputBgFocus;
    }
    &:focus ~ label{
      color: darken($inputColorLabel, 40);
    }
  }
}
.arrow-rotate{
  @media screen and (max-width: 1090px){
    position: absolute;
    top: 73%;
    left: 0;
    transform: rotate(90deg) scale(1.5);
  }
}
.arrow{
  position: absolute;
  left: 50%;
  z-index: 6;
  transform: translate(-50%, -50%);

  &__inner{
    position: relative;
    height: 30px;
    width: 100px;
    overflow: hidden;
    &:before{
      content: '';
      display: table;
      width: 50px;
      height: 50px;
      position: absolute;
      top: 9px;
      left: 25px;
      transform: rotate(45deg);
      border-radius: 5px;
    }
  }
  &:after{
    content: '';
    display: table;
    width: 35px;
    height: 15px;
    position: absolute;
    top: 30px;
    left: 50%;
    transform: translate(-50%, -50%);
  }
  &--main{
    top: -21px;
    .arrow__inner {
      &:before {
      background: $mainColor;
      }
    }
    &:after{
      background: $mainColor;
    }
    @media screen and (max-width: 1090px){
      .arrow__inner {
        &:before {
          background: black;
        }
      }
      &:after{
        background: black;
      }
    }
  }
  &--header{
    top: -21px;
    .arrow__inner {
      &:before {
        background: $headerColor;
      }
    }
    &:after{
      background: $headerColor;
    }
  }

}

.display-none{
  display: none;
}

/*layout*/
.container{
  height: 100vh;
  min-height: 700px;
  text-align: center;
  overflow: hidden;
  background: $containerColor;


  @media (min-aspect-ratio: 16/9) {
    @include aspect-ratio(16, 9);
    max-height: 100vh;
  }

  @media (min-aspect-ratio: 21/9) {
    @include aspect-ratio(21, 9);
    max-height: 100vh;
  }

  @media screen and (max-width: 1090px){
    overflow-x: auto;
  }

  .inner{
    display: flex;
    flex-direction: column;
    height: 100%;
    min-width: 1090px;
    &--index {
      @media screen and (max-width: 1090px){
        overflow-x: hidden;
        min-height: 650px;
        flex-direction: row;
      }
    }
  }

  header,
  main,
  footer{
    position: relative;
  }

  .header{
    display: flex;
    order: 2;
    height: 20%;
    padding: 0 5%;
    background: $headerColor;
    color: invert($headerColor);
    text-shadow: $textShadow;
    z-index: 2;

    &--index{
      @media screen and (max-width: 1090px) {
        flex-shrink: 0;
        order: 2;
        height: 100%;
        width: 42%;
        padding: $paddingMacroXs $paddingMacroXs/2;
        text-align: left;
        left: -25%;
        will-change: left;
        @include animationFromTo(fromTo#{l}, -25%, 0, left);
      }
      @media screen and (min-width: 1091px) {
        top: 150vh;
        will-change: top;
        /* slitta in alto*/
        @include animationFromTo(fromTo#{u}, 150vh, 0);
      }
    }

    .header__title{
      @media screen and (max-width: 1090px) {
        @include title(1.7em);
        margin-bottom: 0.7em;
        span {
          display: block;
        }
      }
      @include title();
    }
    .header__sub-title{
      @media screen and (max-width: 1090px) {
        @include title(1.5em);
        margin-bottom: 1.2em;
        line-height: 1.3em;
      }
      @include title(1.2);
    }
    section{
      margin: auto;
      @media screen and (max-width: 1090px) {
        margin: 0;
        line-height: 2em;
      }
      display: block;
      width: 100%;
    }
  }

  .main{
    display: flex;
    flex-direction: column;
    justify-content: flex-end;
    order: 1;
    height: 70%;
    z-index: 1;

    &--index {
      @media screen and (max-width: 1090px){
        flex-shrink: 0;
        flex-direction: row;
        justify-content: flex-start;
        order: 3;
        width: 55%;
        height: 100%;
        text-align: center;
      }
    }

    .main__form{
      height: 100%;
      position: relative;
      @media screen and (max-width: 1090px){
        width: 100%;
        display: flex;
        flex-direction: row-reverse;
        overflow: hidden;
      }
      &__generate{
        display: flex;
        opacity: 0;

        @include animationFadeIn(fadeInColor, 0, 1);
        $delay: (2.2*$animationDelayBase);
        animation-delay: #{$delay}s;

        @media screen and (max-width: 1090px) {
          position: absolute;
          bottom: 2%;
          left: 50%;
          transform: translateX(-50%);
          width: 500px;
          height: 50%;
          z-index: 5;
        }
        @media screen and (min-width: 1091px) {
          height: 60%;
        }
        //classe da inserire quando si sceglie il colore
        &.generated{
          opacity: 0;
          background: $debugColor; /*Questo Colore si ha con js*/
          will-change: opacity;
          @include animationFadeIn(fadeInColor, 0, 1);
          $delay : (4*$animationDelayBase);
          animation-delay: #{$delay}s;
          @media screen and (max-width: 1090px){
            background: none;
          }
          .button{
            box-shadow: 2px 3px 8px rgba(0,0,0,0.5);
            font-family: 'Comfortaa', cursive;
            @media screen and (max-width: 1090px) {
              width: 90%;
              height: 70%;
              margin: $paddingMacroXs;
              font-size: 1.3em;
            }
          }
        }
        &__container {
          margin: auto;
          width: 80%;
          height: 80%;
          background-color: red;
        }
        .button{
          margin: auto;
          padding: 10px;
          border-radius: 5px;
          font-size: 2em;
          font-weight: bold;
          text-transform: uppercase;
          border: none;
        }
      }
      &__insert{
        position: relative;
        display: flex;
        background: $mainColor;
        @media screen and (max-width: 1090px) {
          width: 100%;
          height: 100%;
          padding: $paddingMacroXs $paddingMacroXs/2;
          left: -5%;
          will-change: left;
          @include animationFromTo(fromTo#{ml}, -200%, 0, left);
          text-align: left;
        }
        @media screen and (min-width: 1091px) {
          height: 40%;
          top: 150vh;
          will-change: top;
          /* slitta in alto*/
          @include animationFromTo(fromTo#{mu}, 150vh, 0);
          animation-delay: #{$animationDelayBase}s;
        }
        &__wrapper{
          margin: auto;
          width: 100%;
          z-index: 2;
          @media screen and (max-width: 1090px) {
            margin: 0 auto;
            width: 80%;
            height: 50%;
            z-index: 5;
          }
        }
        &__title{
          @include title;
          @media screen and (max-width: 1090px) {
            @include title(1.8em);
            text-align: center;
          }
        }
        &__form{
          &__inline-block{
            display: inline-block;
            width: calc((100% / 3) - 30px);
            margin: 10px;
            @media screen and (max-width: 1090px) {
              display: flex;
              flex-direction: column;
              width: 90%;
              margin: 50px auto;
            }
          }
        }
    }
    }
  }

  .footer{
    order: 3;
    height: 10%;
    padding: 1% 5%;
    background: $footerColor;
    text-align: center;
    z-index: 3;

    &--index {
      @media screen and (max-width: 1090px){
        width: 5%;
        background: lighten($footerColor, 30);
        order: 1;
        height: 100%;
        padding: $paddingMacroXs $paddingMacroXs/2;
        i {
          line-height: inherit;
        }
        .xs-hidden {
          display: none;
        }
        left: -5%;
        will-change: left;
        @include animationFromTo(fromTo#{fl}, -5%, 0, left);
      }

      @media screen and (min-width: 1091px) {
        top: 150vh;
        will-change: top;
        /* slitta in alto*/
        @include animationFromTo(fromTo#{fu}, 150vh, 0);
      }
    }
    a{
      margin: auto;
      font-size: 1.3em;
      text-decoration: none;
      color: invert($footerColor);
    }
    .github{
      float: left;
      color: $debugColor;
      &:hover{
        color: $colorLinkHover;
      }
    }
    .home{
      float: right;
      text-transform: uppercase;
    }
  }

}